/* tslint:disable */
/* eslint-disable */
/**
 * Finex Bot API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MatrixAnalysisResult
 */
export interface MatrixAnalysisResult {
    /**
     * 
     * @type {string}
     * @memberof MatrixAnalysisResult
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof MatrixAnalysisResult
     */
    assetId?: string;
    /**
     * 
     * @type {string}
     * @memberof MatrixAnalysisResult
     */
    scenarioId?: string;
    /**
     * Impact score from -5 to +5
     * @type {number}
     * @memberof MatrixAnalysisResult
     */
    impact?: number;
    /**
     * 
     * @type {string}
     * @memberof MatrixAnalysisResult
     */
    summary?: string;
    /**
     * 
     * @type {string}
     * @memberof MatrixAnalysisResult
     */
    evidenceIds?: string;
    /**
     * 
     * @type {string}
     * @memberof MatrixAnalysisResult
     */
    status?: MatrixAnalysisResultStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof MatrixAnalysisResult
     */
    error?: string;
    /**
     * 
     * @type {Date}
     * @memberof MatrixAnalysisResult
     */
    completedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof MatrixAnalysisResult
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof MatrixAnalysisResult
     */
    updatedAt?: Date;
}


/**
 * @export
 */
export const MatrixAnalysisResultStatusEnum = {
    Pending: 'pending',
    Processing: 'processing',
    Completed: 'completed',
    Failed: 'failed'
} as const;
export type MatrixAnalysisResultStatusEnum = typeof MatrixAnalysisResultStatusEnum[keyof typeof MatrixAnalysisResultStatusEnum];


/**
 * Check if a given object implements the MatrixAnalysisResult interface.
 */
export function instanceOfMatrixAnalysisResult(value: object): value is MatrixAnalysisResult {
    return true;
}

export function MatrixAnalysisResultFromJSON(json: any): MatrixAnalysisResult {
    return MatrixAnalysisResultFromJSONTyped(json, false);
}

export function MatrixAnalysisResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): MatrixAnalysisResult {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'assetId': json['assetId'] == null ? undefined : json['assetId'],
        'scenarioId': json['scenarioId'] == null ? undefined : json['scenarioId'],
        'impact': json['impact'] == null ? undefined : json['impact'],
        'summary': json['summary'] == null ? undefined : json['summary'],
        'evidenceIds': json['evidenceIds'] == null ? undefined : json['evidenceIds'],
        'status': json['status'] == null ? undefined : json['status'],
        'error': json['error'] == null ? undefined : json['error'],
        'completedAt': json['completedAt'] == null ? undefined : (new Date(json['completedAt'])),
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
    };
}

export function MatrixAnalysisResultToJSON(json: any): MatrixAnalysisResult {
    return MatrixAnalysisResultToJSONTyped(json, false);
}

export function MatrixAnalysisResultToJSONTyped(value?: MatrixAnalysisResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'assetId': value['assetId'],
        'scenarioId': value['scenarioId'],
        'impact': value['impact'],
        'summary': value['summary'],
        'evidenceIds': value['evidenceIds'],
        'status': value['status'],
        'error': value['error'],
        'completedAt': value['completedAt'] == null ? undefined : ((value['completedAt']).toISOString()),
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
    };
}

