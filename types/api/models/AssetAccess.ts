/* tslint:disable */
/* eslint-disable */
/**
 * Finex Bot API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AssetAccess
 */
export interface AssetAccess {
    /**
     * 
     * @type {string}
     * @memberof AssetAccess
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof AssetAccess
     */
    assetId: string;
    /**
     * 
     * @type {string}
     * @memberof AssetAccess
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof AssetAccess
     */
    permission: AssetAccessPermissionEnum;
    /**
     * 
     * @type {Date}
     * @memberof AssetAccess
     */
    grantedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof AssetAccess
     */
    grantedBy?: string;
}


/**
 * @export
 */
export const AssetAccessPermissionEnum = {
    Read: 'read',
    Write: 'write',
    Admin: 'admin'
} as const;
export type AssetAccessPermissionEnum = typeof AssetAccessPermissionEnum[keyof typeof AssetAccessPermissionEnum];


/**
 * Check if a given object implements the AssetAccess interface.
 */
export function instanceOfAssetAccess(value: object): value is AssetAccess {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('assetId' in value) || value['assetId'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('permission' in value) || value['permission'] === undefined) return false;
    return true;
}

export function AssetAccessFromJSON(json: any): AssetAccess {
    return AssetAccessFromJSONTyped(json, false);
}

export function AssetAccessFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssetAccess {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'assetId': json['assetId'],
        'userId': json['userId'],
        'permission': json['permission'],
        'grantedAt': json['grantedAt'] == null ? undefined : (new Date(json['grantedAt'])),
        'grantedBy': json['grantedBy'] == null ? undefined : json['grantedBy'],
    };
}

export function AssetAccessToJSON(json: any): AssetAccess {
    return AssetAccessToJSONTyped(json, false);
}

export function AssetAccessToJSONTyped(value?: AssetAccess | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'assetId': value['assetId'],
        'userId': value['userId'],
        'permission': value['permission'],
        'grantedAt': value['grantedAt'] == null ? undefined : ((value['grantedAt']).toISOString()),
        'grantedBy': value['grantedBy'],
    };
}

