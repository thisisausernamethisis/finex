/* tslint:disable */
/* eslint-disable */
/**
 * Finex Bot API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AssetAccess
 */
export interface AssetAccess {
    /**
     * 
     * @type {string}
     * @memberof AssetAccess
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof AssetAccess
     */
    assetId?: string;
    /**
     * 
     * @type {string}
     * @memberof AssetAccess
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof AssetAccess
     */
    role?: AssetAccessRoleEnum;
}


/**
 * @export
 */
export const AssetAccessRoleEnum = {
    Viewer: 'VIEWER',
    Editor: 'EDITOR',
    Admin: 'ADMIN'
} as const;
export type AssetAccessRoleEnum = typeof AssetAccessRoleEnum[keyof typeof AssetAccessRoleEnum];


/**
 * Check if a given object implements the AssetAccess interface.
 */
export function instanceOfAssetAccess(value: object): value is AssetAccess {
    return true;
}

export function AssetAccessFromJSON(json: any): AssetAccess {
    return AssetAccessFromJSONTyped(json, false);
}

export function AssetAccessFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssetAccess {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'assetId': json['assetId'] == null ? undefined : json['assetId'],
        'userId': json['userId'] == null ? undefined : json['userId'],
        'role': json['role'] == null ? undefined : json['role'],
    };
}

export function AssetAccessToJSON(json: any): AssetAccess {
    return AssetAccessToJSONTyped(json, false);
}

export function AssetAccessToJSONTyped(value?: AssetAccess | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'assetId': value['assetId'],
        'userId': value['userId'],
        'role': value['role'],
    };
}

