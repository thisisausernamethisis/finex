/* tslint:disable */
/* eslint-disable */
/**
 * Finex Bot API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ThemeCreate
 */
export interface ThemeCreate {
    /**
     * 
     * @type {string}
     * @memberof ThemeCreate
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ThemeCreate
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof ThemeCreate
     */
    category?: string;
    /**
     * 
     * @type {string}
     * @memberof ThemeCreate
     */
    themeType?: ThemeCreateThemeTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof ThemeCreate
     */
    manualValue?: number;
    /**
     * 
     * @type {boolean}
     * @memberof ThemeCreate
     */
    useManualValue?: boolean;
}


/**
 * @export
 */
export const ThemeCreateThemeTypeEnum = {
    Standard: 'STANDARD',
    Growth: 'GROWTH',
    Probability: 'PROBABILITY'
} as const;
export type ThemeCreateThemeTypeEnum = typeof ThemeCreateThemeTypeEnum[keyof typeof ThemeCreateThemeTypeEnum];


/**
 * Check if a given object implements the ThemeCreate interface.
 */
export function instanceOfThemeCreate(value: object): value is ThemeCreate {
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function ThemeCreateFromJSON(json: any): ThemeCreate {
    return ThemeCreateFromJSONTyped(json, false);
}

export function ThemeCreateFromJSONTyped(json: any, ignoreDiscriminator: boolean): ThemeCreate {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'category': json['category'] == null ? undefined : json['category'],
        'themeType': json['themeType'] == null ? undefined : json['themeType'],
        'manualValue': json['manualValue'] == null ? undefined : json['manualValue'],
        'useManualValue': json['useManualValue'] == null ? undefined : json['useManualValue'],
    };
}

export function ThemeCreateToJSON(json: any): ThemeCreate {
    return ThemeCreateToJSONTyped(json, false);
}

export function ThemeCreateToJSONTyped(value?: ThemeCreate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'description': value['description'],
        'category': value['category'],
        'themeType': value['themeType'],
        'manualValue': value['manualValue'],
        'useManualValue': value['useManualValue'],
    };
}

