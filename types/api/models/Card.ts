/* tslint:disable */
/* eslint-disable */
/**
 * Finex Bot API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Chunk } from './Chunk';
import {
    ChunkFromJSON,
    ChunkFromJSONTyped,
    ChunkToJSON,
    ChunkToJSONTyped,
} from './Chunk';

/**
 * 
 * @export
 * @interface Card
 */
export interface Card {
    /**
     * 
     * @type {string}
     * @memberof Card
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Card
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof Card
     */
    content?: string;
    /**
     * 
     * @type {number}
     * @memberof Card
     */
    importance?: number;
    /**
     * 
     * @type {string}
     * @memberof Card
     */
    source?: string;
    /**
     * 
     * @type {string}
     * @memberof Card
     */
    themeId?: string;
    /**
     * 
     * @type {Date}
     * @memberof Card
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Card
     */
    updatedAt?: Date;
    /**
     * 
     * @type {Array<Chunk>}
     * @memberof Card
     */
    chunks?: Array<Chunk>;
}

/**
 * Check if a given object implements the Card interface.
 */
export function instanceOfCard(value: object): value is Card {
    return true;
}

export function CardFromJSON(json: any): Card {
    return CardFromJSONTyped(json, false);
}

export function CardFromJSONTyped(json: any, ignoreDiscriminator: boolean): Card {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'title': json['title'] == null ? undefined : json['title'],
        'content': json['content'] == null ? undefined : json['content'],
        'importance': json['importance'] == null ? undefined : json['importance'],
        'source': json['source'] == null ? undefined : json['source'],
        'themeId': json['themeId'] == null ? undefined : json['themeId'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
        'chunks': json['chunks'] == null ? undefined : ((json['chunks'] as Array<any>).map(ChunkFromJSON)),
    };
}

export function CardToJSON(json: any): Card {
    return CardToJSONTyped(json, false);
}

export function CardToJSONTyped(value?: Card | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'title': value['title'],
        'content': value['content'],
        'importance': value['importance'],
        'source': value['source'],
        'themeId': value['themeId'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'chunks': value['chunks'] == null ? undefined : ((value['chunks'] as Array<any>).map(ChunkToJSON)),
    };
}

