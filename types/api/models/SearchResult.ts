/* tslint:disable */
/* eslint-disable */
/**
 * Finex Bot API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Asset } from './Asset';
import {
    AssetFromJSON,
    AssetFromJSONTyped,
    AssetToJSON,
    AssetToJSONTyped,
} from './Asset';
import type { Theme } from './Theme';
import {
    ThemeFromJSON,
    ThemeFromJSONTyped,
    ThemeToJSON,
    ThemeToJSONTyped,
} from './Theme';
import type { Card } from './Card';
import {
    CardFromJSON,
    CardFromJSONTyped,
    CardToJSON,
    CardToJSONTyped,
} from './Card';

/**
 * 
 * @export
 * @interface SearchResult
 */
export interface SearchResult {
    /**
     * 
     * @type {Array<Asset>}
     * @memberof SearchResult
     */
    assets: Array<Asset>;
    /**
     * 
     * @type {Array<Theme>}
     * @memberof SearchResult
     */
    themes: Array<Theme>;
    /**
     * 
     * @type {Array<Card>}
     * @memberof SearchResult
     */
    cards: Array<Card>;
    /**
     * 
     * @type {number}
     * @memberof SearchResult
     */
    total: number;
}

/**
 * Check if a given object implements the SearchResult interface.
 */
export function instanceOfSearchResult(value: object): value is SearchResult {
    if (!('assets' in value) || value['assets'] === undefined) return false;
    if (!('themes' in value) || value['themes'] === undefined) return false;
    if (!('cards' in value) || value['cards'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    return true;
}

export function SearchResultFromJSON(json: any): SearchResult {
    return SearchResultFromJSONTyped(json, false);
}

export function SearchResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchResult {
    if (json == null) {
        return json;
    }
    return {
        
        'assets': ((json['assets'] as Array<any>).map(AssetFromJSON)),
        'themes': ((json['themes'] as Array<any>).map(ThemeFromJSON)),
        'cards': ((json['cards'] as Array<any>).map(CardFromJSON)),
        'total': json['total'],
    };
}

export function SearchResultToJSON(json: any): SearchResult {
    return SearchResultToJSONTyped(json, false);
}

export function SearchResultToJSONTyped(value?: SearchResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'assets': ((value['assets'] as Array<any>).map(AssetToJSON)),
        'themes': ((value['themes'] as Array<any>).map(ThemeToJSON)),
        'cards': ((value['cards'] as Array<any>).map(CardToJSON)),
        'total': value['total'],
    };
}

